how to find the file with a particular user and copy or move file to other place in linux
#  find /directory -user username -exec cp -pfr {} /location/to/move \;
#  find /directory -user username -exec mv {} /location/to/move \;

How to change the UUID of a particular base harddisk in virtual box. (You can duplicate hard disk image
files on the same host to quickly produce a second virtual machine with the same operating system setup.
However, you should only make copies of virtual disk images using the utility supplied with VirtualBox;
This is because VirtualBox assigns a unique identity number (UUID) to each disk image, which is also stored
inside the image, and VirtualBox will refuse to work with two images that use the same number.)
#  vboxmanage internalcommands sethduuid file-path-location New-UUID

how to change the default editor in visudo command in linux
# update-alternatives --config editor
now you will get choices of the editor and then you can choose your preferred editor

How to start the docker container with the systemctl support in linux.
1. Start the container.
#  docker run -it \
-e "container=docker" \
--privileged=true -d --security-opt \
seccomp:unconfined \
--cap-add=SYS_ADMIN \
 -v /sys/fs/cgroup:/sys/fs/cgroup:ro \
 centos bash -c "/usr/sbin/init"

2. After you run your container, you can then execute bash to get the shell to the container.
 #  docker exec -it [ContainerID] /bin/bash

How to check which file is owned by which package in Ubuntu linux
# dpkg -S path-of-file-binary

How to check and check the swappiness value in Linux
1. check the swappiness value with the following:
  cat /etc/sysctl.conf
  sysctl -a | grep -i swappiness
  cat /proc/sys/vm/swappiness

2. To set the swappiness value in linux use the following.
  echo "value" > /proc/sys/vm/swappiness
  or *to make persistent changes edit the file directly*
  vi /etc/sysctl.conf or vi /etc/sysctl.d/99-sysctl.conf
  or
  sysctl "vm.swappiness=10"

  Difference between /var/tmp and /tmp in linux.
   The main difference between /var/tmp and /tmp is the retention period of the data.
   the data stored in /var/tmp is more persistent than /tmp.

  How to boot into single user mode in ubuntu.

. Switch on your computer.
. Wait until the BIOS has finished loading, or has almost finished.
  (During this time you will probably see a logo of your computer manufacturer.)
. Quickly press and hold the Shift key, which will bring up the GNU GRUB menu. (
  If you see the Ubuntu logo, you've missed the point where you can enter the GRUB menu.)
. Select the line which starts with "Advanced options" or ending with "(recovery mode).
. Ubuntu GNU/Linux, with Linux 3.8.0-26-generic (recovery mode)
. Press Return and your machine will begin the boot process.
. Select "Drop to root shell prompt"
. The root partition is mounted read-only. To mount it read/write, enter the command
. mount -o remount,rw /
. If you have /home, /boot, /tmp, or any other mount point on a separate partition, you can mount them with the command
. mount --all

In ansible the SUDO is now be executed with -b option in the command line, this can make the ansible_user defined in the hosts
file to take sudo privileages to execute the command and give results.
#  ansible all -i /home/amankh/inventory -m user -a "name=someuser state=present"
now if the above command gives us the permission issues while executing, we can overcome it with the help of '-b' option.
#  ansible all -i inventory -m user -a "name=someuser state=present" -b
This will execute the commands successfully and will not pass any issues untill the ansible_user is having the sudo access.

Docker tag command and push docker images to account.
# docker tag image-id your-account-name/image-name:version-label,tag
# docker images -- to check the image with new tag
 now login to your docker hub account with docker login command
# docker login https://url-for-docker-hub -u username -p password
once you login into your docker hub account, your credentials get stored as hash value in $HOME/.docker/config.json.
 then push your image to docker hub acccount
# docker push repository
Now login to docker hub and check your account.

how to link containers in docker
create a new container out of mysql with the ports getting exposed of host to container, 3306.
#  docker run --name mysqla -e MYSQL_ROOT_PASSWORD=password -p 3306:3306 -d mysql
Then we create a new container which uses the mysql container as a back end.
#  docker run --name link --link mysqla:mysql -d -p 80:80  owncloud

To get the log level information in docker we specify the logging options in the docker file /etc/sysconfig/docker.
#  DOCKER_OPTS="--log-level=info,debug,fatal,warn"
To stop the docker communication we will need to add the docker options in the docker file.
#  DOCKER_OPTS="--icc=false --iptables=false"
--icc for inter container communication
and --iptables for the iptables rule of the docker host, which the docker daemon can set or unset.
with the iptables rule set to false the docker daemon cannot update the firewall related settings on the docker host.

TMUX CHEATSHEET
start new:
tmux

start new with session name:
tmux new -s myname

attach:
tmux a  #  (or at, or attach)

attach to named:
tmux a -t myname

list sessions:
tmux ls

kill session:
tmux kill-session -t mynamestart new

If  grep does not capture the data in a file and complains about the binary data in the files then use -a switch.
#  grep -a -e refused /var/log/auth.log  # -a force grep to actually print the contents of the file.

The equivalent to chkconfig is update-rc.d in ubuntu.

The equivalents you seek are

update-rc.d <service> defaults
update-rc.d <service> start 20 3 4 5
update-rc.d -f <service>  remove

How to resize the virtual box disk image file, to increase the virtual box disk size
#  vboxmanage modifymedium disk ubuntu\ 14.04.vdi --resize 20000
    resized the existing disk size to 20GB.

To check the details of the vdi file use the command.
#  vboxmanage showmediuminfo ubuntu\ 14.04.vdi
When you start the virtual machine the disk will be visible to the OS. If you can't see it, you will need to force a rescan for SCSI devices.
There are two methods to achieve this.The first involves echoing wildcards to the individual SCSI host(s).
# ls /sys/class/scsi_host/
host0  host1  host2
#

# echo "- - -" > /sys/class/scsi_host/host0/scan
# echo "- - -" > /sys/class/scsi_host/host1/scan
# echo "- - -" > /sys/class/scsi_host/host2/scan

The second involves echoing the value "1" to the SCSI device rescan file.
# ls /sys/class/scsi_device
1:0:0:0  2:0:0:0
#

# echo 1 > /sys/class/scsi_device/1:0:0:0/device/rescan
# echo 1 > /sys/class/scsi_device/2:0:0:0/device/rescan
Within a few seconds the device should be visible to the Linux OS. If in doubt, reboot the VM.

Partition the New Space in case of LVM. (Start the virtual machine and check the current file system sizes. We plan to add space to the root file system.)
---------------------------------------------------------------------------------------------------
# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/vg_ol6112-lv_root
                       26G   19G  5.3G  78% /
tmpfs                1004M   88K 1004M   1% /dev/shm
/dev/sda1             485M  144M  316M  32% /boot
//192.168.0.4/u02     907G  746G  115G  87% /host
---------------------------------------------------------------------------------------------------
In this example, we are adding the extra space by extending the existing virtual disk. If we were adding the space using an extra disk,
we would follow a similar approach, but we would partition the new disk (/dev/sdb) instead. Keep this in mind when any device paths are used in this example.

Check the new space is visible from the operating system.
---------------------------------------------------------------------------------------------------
# fdisk /dev/sda

WARNING: DOS-compatible mode is deprecated. It's strongly recommended to
         switch off the mode (command 'c') and change display units to
         sectors (command 'u').

Command (m for help): p

Disk /dev/sda: 42.9 GB, 42949672960 bytes
255 heads, 63 sectors/track, 5221 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x00076f69

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *           1          64      512000   83  Linux
Partition 1 does not end on cylinder boundary.
/dev/sda2              64        3917    30944256   8e  Linux LVM

Command (m for help):
Create a new partition using the remaining space on the disk. In this case, it was the 3rd partition on the disk,
so the partition was created with the "n, p, 3, (return), (return)" sequence of entries.

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 3
First cylinder (3917-5221, default 3917):
Using default value 3917ab -k -c 350 -n 20000 http://localhost:80/
Last cylinder, +cylinders or +size{K,M,G} (3917-5221, default 5221):
Using default value 5221

Command (m for help):
Change the partition type to "Linux LVM". In this case, the sequence of entries was, "t, 3, 8e".

Command (m for help): t
Partition number (1-4): 3
Hex code (type L to list codes): 8e
Changed system type of partition 3 to 8e (Linux LVM)

Command (m for help):
Write the changes to the partition table using the "w" command.

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: Device or resource busy.
The kernel still uses the old table. The new table will be used at
the next reboot or after you run partprobe(8) or kpartx(8)
Syncing disks.
--------------------------------------------------------------------------------------------------
Due to the final warning, the VM must be rebooted before you can continue. Or use partprobe or kpartx -l /dev/sd. command instead!

If we had used a new virtual disk, rather than extending the existing one, we would not have needed to reboot after the partitioning step.
Add Partition to LVM

Add the new partition to the volume group. Create a physical volume from the "/dev/sda3" partition using the pvcreate command.
---------------------------------------------------------------------------------------------------
# pvcreate /dev/sda3
  Physical volume "/dev/sda3" successfully created
#
Add the physical volume to the existing volume group. Display the volume group name using the vgdisplay command,
then use the volume group name and partition name with the vgextend command.

# vgdisplay
  --- Volume group ---
  VG Name               vg_ol6112
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                2
  Open LV               2
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               29.51 GiB
  PE Size               4.00 MiB
  Total PE              7554
  Alloc PE / Size       7554 / 29.51 GiB
  Free  PE / Size       0 / 0
  VG UUID               M3LcFJ-etHj-u7zh-I4em-4Js0-SczK-8JDj93

# vgextend vg_ol6112 /dev/sda3
  Volume group "vg_ol6112" successfully extended
-----------------------------------------------------------------------------------------------------
Use lvdisplay command to get the root logical volume name. Use the vgdisplay command to get the free space in the volume group.
Use this information in the lvextend command to extend the logical volume.
-----------------------------------------------------------------------------------------------------
# lvdisplay | grep "LV Path"
  LV Path                /dev/vg_ol6112/lv_root
  LV Path                /dev/vg_ol6112/lv_swap
# vgdisplay vg_ol6112 | grep Free
  Free  PE / Size       2558 / 9.99 GiB
# lvextend --size +9.99G --resizefs /dev/vg_ol6112/lv_root
  Rounding size to boundary between physical extents: 9.99 GiB
  Extending logical volume lv_root to 35.56 GiBab -k -c 350 -n 20000 http://localhost:80/ab -k -c 350 -n 20000 http://localhost:80/
  Logical volume lv_root successfully resized
resize2fs 1.41.12 (17-May-2010)
Filesystem at /dev/mapper/vg_ol6112-lv_root is mounted on /; on-line resizing required
old desc_blocks = 2, new_desc_blocks = 3
Performing an on-line resize of /dev/mapper/vg_ol6112-lv_root to 9322496 (4k) blocks.
The filesystem on /dev/mapper/vg_ol6112-lv_root is now 9322496 blocks long.

----------------------------------------------------------------------------------------------------
If we had specified a size of 10G, we might have got an error message saying something like, "could not extend by 2560 extents", due to a rounding error.
In the above example, the size of 9.99G was used to allow it to fit, but a better alternative would be to specify the size using extents,
using one less extent than the number reported in the error, as shown below. Thanks to Julian Dyke for suggesting the extents approach.
-----------------------------------------------------------------------------------------------------
# lvextend --extents +2559 --resizefs  /dev/vg_ol6112/lv_root
The lvextend command used the --resizefs option. If we had not used this, we would have to run the resize2fs command separately.

# resize2fs /dev/vg_ol6112/lv_root
In the comments Juan suggested the following command if you are using BTRFS.

# btrfs filesystem resize max /
Checking the size of the file systems reveals the root file system has grown by approximately 10G.

# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/mapper/vg_ol6112-lv_root
                       36G   19G   15G  56% /
tmpfs                1004M   88K 1004M   1% /dev/shm
/dev/sda1             485M  144M  316M  32% /boot
//192.168.0.4/u02     907G  746G  115G  87% /host
-------------------------------------------------------------------------------------------------
If there is no LVM in your machine then one approach can be you can move the high space folders to another partition.
Eg. the /var folder and /usr folder usually requires more space so you can create a new partition out of your existing HDD and move /var
and /usr to new partition but in Single-user mode only.

After moving to the new partition you need to add the entries for the new partition and the mount point carefully in /etc/fstab file so that
the mount point persists after reboots.

--------------------------------------------------------------------------------------------------
If atom crashes into Ubuntu Virtual box do the following.
1. Disable 3D acceleration in Virtual box to fix this.
2. Start atom from command line with the following options.
  #   atom --disable-gpu
---------------------------------------------------------------------------------------------------
Every Linux System has three options to clear cache without interrupting any processes or services:

1. Clear PageCache only.
# sync; echo 1 > /proc/sys/vm/drop_caches

2. Clear dentries and inodes.
# sync; echo 2 > /proc/sys/vm/drop_caches

3. Clear PageCache, dentries and inodes.
# sync; echo 3 > /proc/sys/vm/drop_caches

If you want to clear Swap space, you may like to run the below command.
# swapoff -a && swapon -a

Is it good idea to auto clear RAM cache on production server?

-> No! it is not. Think of a situation when you have scheduled the script to clear
ram cache everyday at 2am. Everyday at 2am the script is executed and it flushes your RAM cache.
One day for whatsoever reason, may be more than expected users are online on your website
and seeking resource from your server.At the same time scheduled script run and clears
everything in cache. Now all the user are fetching data from disk.
It will result in server crash and corrupt the database.
So clear ram-cache only when required,and known your foot steps, else you are a Cargo Cult System Administrator.

A nice customization of Variable PS1 in linux.
# export PS1='\[\e]0;\w\a\]\n\[\e[32m\]\u@\h: \[\e[33m\]\w\[\e[0m\]\n\$ '

To install Openldap on ubuntu 16.04 :
-> Package required: slapd
Description-en: OpenLDAP server (slapd)
 This is the OpenLDAP (Lightweight Directory Access Protocol) server
 (slapd). The server can be used to provide a standalone directory service.

How to find files that are of a specific size and exclude some by name in linux:
#  find . -type f \( ! -iname "ubuntu*" \) -size +700M -exec ls -1 {} \;
#  find . -type f \( -not -iname "ubuntu*" \) -size +700M -exec ls -1 {} \;
This will search for files of 700MB size in the current working directory and subsequent following
directory and will exclude file with name or presence of ubuntu string from it.

Find all the txt files and ignore the hidden files:
# find . -type f \( -iname "*.txt" ! -iname ".*" \)

How do I install the OpenSSL libraries on Ubuntu?
-> You want to install the development package, which is libssl-dev:
# sudo apt-get install libssl-dev

Why docker has ability to run different linux distribution?
-> Because the kernel is the same.
The common point of all linux distributions, and why they are called linux, is because they all use the linux kernel.
Containers share the same kernel as the host, that's why you can run an Arch image on a Ubuntu host.
Here's an overview of Linux.
The kernel is a part of the operating system that handles communication with the hardware.
It's the lowest level of the operating system. Here is a list of the main functions of the kernel:

memory management
network management
device driver
file management
process management

So when you use a container you only have access to the kernel of the host,
since it's the only part that communicates with hardware, as long as your OS uses the good syscall,
you are able to run any linux distribution inside your container.
(This is the reason you can't use Windows inside a container: it's not using the same syscall).

Build context for docker image very large.
-> The Docker client sends the entire "build context" to the Docker daemon.
That build context (by default) is the entire directory the Dockerfile is in (so, the entire rpms tree).
You can setup a .dockerignore file to get Docker to ignore some files. You might want to experiment with it.
Alternatively, you can move your rpms folder one directory level above your Dockerfile,
and only symlink test.rpm into the Dockerfile's directory.

To list the iptables rules:
# iptables --list

To print the number of rows in a file with awk command:
#  awk '{print NF}' /root/value
To print number of lines in a file instead of wc -l.
# awk '{print NR}' | tail -1
tail through the log output for a specific row in /var/log/messages file
# tail -f /var/log/messages |awk '{print $20,$21}' | grep -i 'DPT\|SPT'

Docker command like CMD and ENTRYPOINT can take one of the two declaration types:
-> We normally use entrypoint when we want our docker container to be a live executable
and dont want anyone to override command to our container.However, you can overrride the
docker entrypoint command with the help of --entrypoint "command" flag in the docker run command.
-> we can use a Entrypoint and a CMD together in a docker file, but makesure you use EXEC form in both of the declaration
we can achieve like we execute the ENTRYPOINT first and the command to the CMD is passed as an argument
to the entrypoint instruction.
Sample Example:

FROM busybox:latest
MAINTAINER "amaankhan@gmail.com"
ENTRYPOINT [ "ping" ]
CMD [ "localhost" ]
You can also override the docker CMD command in this case, coz the CMD information you pass with the docker run
command will be overridden and passed as an argument ot the docker ENTRYPOINT command.

1. Exec Form
its like a json array of command and arguments.
Ex. ENTRYPOINT [ "command", "argument1", "argument2" ]
2. Shell form
its just like passing the command and the argument and it takes the form like.
Ex. ENTRYPOINT command argument1 argument2 #normally executed with /bin/sh -c
it will get executed in the form of /bin/sh -c "command argument1 argument2"

How to run the docker machine in ubuntu:
# docker-machine create --driver virtualbox --virtualbox-boot2docker-url "https://github.com/boot2docker/boot2docker/releases/download/v1.12.3/boot2docker.iso" demo
Running pre-create checks...
Creating machine...
(demo) Downloading /root/.docker/machine/cache/boot2docker.iso from https://github.com/boot2docker/boot2docker/releases/download/v1.12.3/boot2docker.iso...
(demo) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%
(demo) Creating VirtualBox VM...
(demo) Creating SSH key...
(demo) Starting the VM...
(demo) Check network to re-create if needed...
(demo) Found a new host-only adapter: "vboxnet0"
(demo) Waiting for an IP...
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with boot2docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env demo

Usage of ADD and Simple RUN in a sample use-case of Docker:
1. ADD command.
ADD http://foo.com/package.tar.bz2 /tmp/
RUN tar -xjf /tmp/package.tar.bz2 \     #-x extract, -j for bzip2 compression, -f filename or archive
  && make -C /tmp/package \
  && rm /tmp/package.tar.bz2
ADD instruction which retrieves a package from a URL followed by a RUN instruction which unpacks it,
builds it and then attempts to clean-up the downloaded archive.

2. Accomplishment of the above task with only RUN command.
RUN curl http://foo.com/package.tar.bz2 \
  | tar -xjC /tmp/package \       #-x extract, -j for bzip2 compresssion, -C equivalent to --directory.
  && make -C /tmp/package

How to clone a github directory in linux:
# git clone https://github.com/docker/docker-bench-security.git
Cloning into 'docker-bench-security'...
remote: Counting objects: 1038, done.
remote: Compressing objects: 100% (17/17), done.
remote: Total 1038 (delta 7), reused 0 (delta 0), pack-reused 1021
Receiving objects: 100% (1038/1038), 1.59 MiB | 318.00 KiB/s, done.
Resolving deltas: 100% (699/699), done.
Checking connectivity... done.

This will create a directory of the github account and place all the files from the account to my local
file system. you can also use the git checkout command to check the status of the branch.

How to set the default username and password in git for commiting to github repositories:
# Run

  git config --global user.email "you@example.com"  #account you used while creating the Github account.
  git config --global user.name "Your Name"         #Username for the Github account.

to set your account's default identity.
Omit --global to set the identity only in this repository.

Apache benchmarking tool: ab
# The apache benchmark tool is very basic, and while it will give you a solid idea of some performance,
 it is a bad idea to only depend on it if you plan to have your site exposed to serious stress in production.
Having said that, here's the most common and simplest parameters:

-c: ("Concurrency"). Indicates how many clients (people/users) will be hitting the site at the same time.
 While ab runs, there will be -c clients hitting the site.
 This is what actually decides the amount of stress your site will suffer during the benchmark.

-n: Indicates how many requests are going to be made. This just decides the length of the benchmark.
A high -n value with a -c value that your server can support is a good idea to ensure that things don't
break under sustained stress: it's not the same to support stress for 5 seconds than for 5 hours.

-k: This does the "KeepAlive" funcionality browsers do by nature. You don't need to pass a value for -k as it it "boolean"
(meaning: it indicates that you desire for your test to use the Keep Alive header from HTTP and sustain the connection).
Since browsers do this and you're likely to want to simulate the stress and flow that your site will have from browsers,
it is recommended you do a benchmark with this.

The final argument is simply the host. By default it will hit http:// protocol if you don't specify it.
example: # ab -k -c 350 -n 20000 http://localhost:80/


# ab -k -c 350 -n 20000 example.com/
By issuing the command above, you will be hitting http://example.com/ with 350 simultaneous connections until
20 thousand requests are met. It will be done using the keep alive header.
After the process finishes the 20 thousand requests, you will receive feedback on stats.
This will tell you how well the site performed under the stress you put it when using the parameters above.
For finding out how many people the site can handle at the same time, just see if the response times
(means, min and max response times, failed requests, etc) are numbers your site can accept
(different sites might desire different speeds).
You can run the tool with different -c values until you hit the spot where you say "If I increase it, it starts
to get failed requests and it breaks".
Depending on your website, you will expect an average number of requests per minute.
This varies so much, you won't be able to simulate this with ab.
However, think about it this way: If your average user will be hitting 5 requests per minute and the average
response time that you find valid is 2 seconds, that means that 10 seconds out of a minute 1 user will be on requests,
eaning only 1/6 of the time it will be hitting the site. This also means that if you have 6 users
hitting the site with ab simultaneously, you are likely to have 36 users in simulation,
even though your concurrency level (-c) is only 6.
This depends on the behavior you expect from your users using the site,
but you can get it from "I expect my user to hit X requests per minute and I consider an average
response time valid if it is 2 seconds". Then just modify your -c level until you are hitting 2 seconds
of average response time (but make sure the max response time and stddev is still valid) and see how big you can make -c.

I hope I explained this clear :) Good luck

How to move files to another partition wiht rsync.
# rsync -av /var/www/html /mnt/volume-nyc1-01
Using the -a flag preserves the permissions and other directory properties,
while -v provides verbose output so you can follow the progress.

To disable HyperV with command line in windows(64 bit)
# C:\WINDOWS\SYSNATIVE\DISM.EXE /Online /Disable-Feature:Microsoft-Hyper-V-All
